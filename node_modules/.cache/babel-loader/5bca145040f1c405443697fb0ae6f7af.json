{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin/Desktop/covid-tracker/src/Components/Charts/Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nfunction Chart({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    async function fetchAPI() {\n      setDailyData(await fetchDailyData());\n    }\n\n    fetchAPI();\n  });\n  const LineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"infected\",\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"deaths\",\n        borderColor: \"red\",\n        backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 8\n    }\n  }) : null;\n  const BarChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n      datasets: [{\n        label: \"People\",\n        backgroundColor: [\"rgba(0,0,255,0.5)\", \"rgba(0,255,0,0.5)\", \"rgba(255,0,0,0.5)\"],\n        data: [confirmed, recovered, deaths]\n      }]\n    },\n    options: {\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, country ? BarChart : LineChart);\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/ashwin/Desktop/covid-tracker/src/Components/Charts/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","LineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","BarChart","title","display","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,SAASC,KAAT,CAAe;AAACC,EAAAA,IAAI,EAAG;AAACC,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAR;AAAwCC,EAAAA;AAAxC,CAAf,EAAgE;AAC9D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,QAAf,GAAyB;AACvBD,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACD;;AACDY,IAAAA,QAAQ;AACT,GALQ,CAAT;AAOA,QAAMC,SAAS,GACbH,SAAS,CAACI,MAAV,gBACG,oBAAC,IAAD;AACC,IAAA,IAAI,EAAI;AACNC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CADF;AAENC,MAAAA,QAAQ,EAAE,CAAC;AACTb,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACV,UAAAA;AAAD,SAAD,KAAiBA,SAA/B,CADG;AAETa,QAAAA,KAAK,EAAE,UAFE;AAGTC,QAAAA,WAAW,EAAE,SAHJ;AAITC,QAAAA,IAAI,EAAE;AAJG,OAAD,EAKP;AACDhB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACR,UAAAA;AAAD,SAAD,KAAcA,MAA5B,CADL;AAEDW,QAAAA,KAAK,EAAE,QAFN;AAGDC,QAAAA,WAAW,EAAE,KAHZ;AAIDE,QAAAA,eAAe,EAAE,sBAJhB;AAKDD,QAAAA,IAAI,EAAE;AALL,OALO;AAFJ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAiBS,IAlBX;AAqBA,QAAME,QAAQ,GACZjB,SAAS,gBAEP,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJS,MAAAA,MAAM,EAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADL;AAEJG,MAAAA,QAAQ,EAAG,CAAC;AACVC,QAAAA,KAAK,EAAG,QADE;AAEVG,QAAAA,eAAe,EAAG,CAChB,mBADgB,EAEhB,mBAFgB,EAGhB,mBAHgB,CAFR;AAOVjB,QAAAA,IAAI,EAAG,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,MAAvB;AAPG,OAAD;AAFP,KADR;AAaE,IAAA,OAAO,EAAE;AACPgB,MAAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,IAAV;AAAgBC,QAAAA,IAAI,EAAE,oBAAmBjB,OAAQ;AAAjD;AADA,KAbX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFO,GAmBL,IApBN;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACwB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,OAAO,GAAGc,QAAH,GAAcV,SADxB,CADF;AAKD;;AAED,eAAeT,KAAf","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport {fetchDailyData} from \"../../api\"\nimport {Line, Bar} from \"react-chartjs-2\"\nimport styles from \"./Chart.module.css\"\n\nfunction Chart({data : {confirmed, recovered, deaths}, country}){\n  const [dailyData, setDailyData] = useState([])\n\n  useEffect(() => {\n    async function fetchAPI(){\n      setDailyData(await fetchDailyData())\n    }\n    fetchAPI()\n  })\n\n  const LineChart = (\n    dailyData.length ?\n      (<Line\n        data = {{\n          labels: dailyData.map(({date}) => date),\n          datasets: [{\n            data: dailyData.map(({confirmed}) => confirmed),\n            label: \"infected\",\n            borderColor: \"#3333ff\",\n            fill: true\n          }, {\n            data: dailyData.map(({deaths}) => deaths),\n            label: \"deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true\n          }]\n        }}\n       />) : null\n  )\n\n  const BarChart = (\n    confirmed ?\n    (\n      <Bar\n        data={{\n          labels : [\"Infected\", \"Recovered\", \"Deaths\"],\n          datasets : [{\n            label : \"People\",\n            backgroundColor : [\n              \"rgba(0,0,255,0.5)\",\n              \"rgba(0,255,0,0.5)\",\n              \"rgba(255,0,0,0.5)\"\n            ],\n            data : [confirmed, recovered, deaths]\n          }]\n        }}\n        options={{\n          title: {display: true, text:`Current state in ${country}`}\n        }}\n      />\n    ) : null\n  )\n\n  return(\n    <div className={styles.container}>\n      {country ? BarChart : LineChart}\n    </div>\n  )\n}\n\nexport default Chart\n"]},"metadata":{},"sourceType":"module"}